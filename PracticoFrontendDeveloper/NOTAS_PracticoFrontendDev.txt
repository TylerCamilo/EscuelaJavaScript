###	CLASE 2, BUENAS PRACTICAS DE CSS: REFLEXION Y ADVERTENCIAS

¬°Hola, Platzinauta! ¬°Qu√© alegr√≠a que est√©s por iniciar el Curso Pr√°ctico de Frontend Developer! üåà

En esta lectura quiero ayudarte a aclarar algunos conceptos sobre las pr√≥ximas clases, 
tus posibles rutas de aprendizaje y el proyecto del curso. üíö

¬øQu√© es una buena pr√°ctica?
Antes de seguir, responde la siguiente pregunta (mentalmente o en la secci√≥n de comentarios): 
¬øqu√© significa seguir ‚Äúbuenas pr√°cticas‚Äù?

Para m√≠ las buenas pr√°cticas son un conjunto de costumbres, acciones, decisiones y/o 
herramientas que agilizan, mejoran el rendimiento, legibilidad, mantenimiento y/o escalabilidad 
de nuestros proyectos en un CONTEXTO muy espec√≠fico.

La palabra clave es contexto. Las buenas pr√°cticas NO son absolutas. As√≠ como funcionan 
en ciertas situaciones, dejan de tener sentido en otras circunstancias.


Es un error com√∫n hablar de buenas o malas pr√°cticas sin entender correctamente su contexto. 
Yo mismo he ca√≠do en esa falacia. Por fortuna, mis l√≠deres, profes, compa√±eras y amigos han
tenido la paciencia y empat√≠a de explicarme c√≥mo analizar el contexto de cada situaci√≥n antes 
de llegar a una conclusi√≥n.

El contexto de este curso
El Curso Pr√°ctico de Frontend Developer pertenece a dos escuelas en Platzi:

Escuela de JavaScript: la ruta de aprendizaje m√°s corta para aprender desarrollo web desde 
cero hasta nivel muy avanzado con el Stack PERNN (PostgreSQL, Express.js, React.js, Next.js y 
Node.js).
Escuela de Desarrollo Web: la ruta de aprendizaje m√°s larga y completa para dominar y 
profundizar en todas las herramientas o stacks de programaci√≥n m√°s importantes del desarrollo 
web.
üí° Escuela de JavaScript vs. Escuela de Desarrollo Web: ¬øCu√°l elegir? ¬øCu√°l es mejor?

Junto al Curso de Frontend Developer, este curso es la introducci√≥n al gran mundo de la 
maquetaci√≥n con HTML y CSS que estudiaremos en la Escuela de JavaScript. Luego de este curso 
seguir√°n las bases de JavaScript, frontend con React.js y backend con Node.js.

En cambio, en la Escuela de Desarrollo Web tenemos much√≠simos m√°s cursos para practicar HTML 
y CSS, crear a√∫n m√°s proyectos para tu portafolio profesional y profundizar en herramientas 
complejas como responsive design, CSS Grid, flexbox y animaciones con CSS.

Etiqueta style vs. archivos .css
Mi nombre es JuanDC, Course Director de este curso y la Escuela de JavaScript 2.0. Tambi√©n 
soy el responsable de que en este curso escribamos el HTML y CSS de cada p√°gina en el mismo 
archivo usando la etiqueta style.

En las pr√≥ximas clases puede surgirte la duda de por qu√© decidimos no separar los estilos en 
sus propios archivos .css si supuestamente es una ‚Äúmala pr√°ctica‚Äù. Pero recuerda que las buenas 
o malas pr√°cticas NO son absolutas, siempre dependen de un contexto. üòÖ

Teniendo eso en cuenta: ¬øpor qu√© crees que es una mala pr√°ctica escribir el CSS en etiquetas 
style en vez de archivos .css?

Durante la etapa de planeaci√≥n discutimos mucho junto a Teffcode, Oscar Barajas y Nico Molina 
para encontrar la mejor manera de conectar todos sus cursos en la Escuela de JavaScript y 
construir el mismo proyecto progresivamente.

M√°s adelante en tu ruta de aprendizaje vas a tomar el Curso Pr√°ctico de React.js. Uno de sus 
objetivos es ense√±arte c√≥mo convertir p√°ginas en HTML y CSS a componentes en React. Vas a d
arte cuenta que all√≠ descargamos el proyecto de este Curso Pr√°ctico de Frontend Developer 
para separarlo entre vistas, componentes y contenedores.

La raz√≥n de mantener el HTML y CSS de cada secci√≥n de nuestra tienda en un solo archivo .html
 es para facilitar nuestro trabajo de separar y unir todo ese c√≥digo cuando tomemos el curso 
 de React.

No es un error. ¬°Y tampoco una mala pr√°ctica!

Conclusiones
Si tu proyecto con HTML y CSS es la versi√≥n final de la aplicaci√≥n que desplegar√°s a producci√≥n 
(la que publicar√°s en internet y ser√° usada por usuarios reales), entonces definitivamente es
 muy buena pr√°ctica separar tus estilos en archivos .css.

En cambio, si tu maquetaci√≥n con HTML y CSS es apenas el principio de tu desarrollo frontend 
y m√°s adelante convertir√°s estos elementos en componentes con alguna herramienta como Web 
Components, React.js, Angular, Svelte o Vue.js, entonces NO es una mala pr√°ctica separar cada 
elemento en su respectivo archivo ni mantener su HTML y CSS en el mismo lugar.

Espero que esta explicaci√≥n te haya ayudado un poco a entender el flujo de desarrollo y 
decisiones que tomamos de este curso. Recuerda siempre tener muy claro el contexto de cada 
situaci√≥n antes de determinar si es una buena o mala pr√°ctica.

Cu√©ntame sobre cualquier duda que tengas sobre buenas pr√°cticas en la maquetaci√≥n web.
 ¬°Mucha suerte completando este curso!
 
### CLASE 3 	IDENTIFICA LAS PANTALLAS DE TU PROYECTO

ACA VEREMOS LAS SOLICITUDES DE DISE√ëO

https://scene.zeplin.io/project/60afeeed20af1378ed046538}

FLUJOGRAMA DE FUNCIONALIDAD ORDEN DE LAS PANTALLAS.

VERSION MOBILE:
https://www.figma.com/proto/bcEVujIzJj5PNIWwF9pP2w/Platzi_YardSale?node-id=0%3A684&amp%3Bscaling=scale-down&amp%3Bpage-id=0%3A1&amp%3Bstarting-point-node-id=0%3A719

VERSION DESKTOP:

https://www.figma.com/proto/bcEVujIzJj5PNIWwF9pP2w/Platzi_YardSale?node-id=3%3A2112&amp%3Bscaling=scale-down&amp%3Bpage-id=0%3A998&amp%3Bstarting-point-node-id=5%3A2808

FIGMA NOS SIRVE PARA MAQUETAR NUESTRO PROYECTO. HAY CURSO

#### CLASE 4 SISTEMA DE DISE√ëO, ASSETS Y VARIABLES DE CSS

	¬ø CUAL ES LA UTILIDAD DE TENER UN SISTEMA DE DISE√ëO?
	- VARIBALES CSS SU UTILIDAD
	- ARCHIVS ASSETS Y TENERLOS EN UNA PARTE ESPECIAL PARA SU USO. 
	
	ENTONCES, EN EL PROYECTO SOLICITAN CIERTO COLORES PALETA DE COLORES Y CIERTAS LETRAS.
	Vamos a ingresarlo al codigo como variables para acceder a ellos en el momento que se necesite.
	con eso si se modifica en algun momento, solo se cambiar√° en la variable.
	
	1. Se buscan las fuentes en google fonts y cpiamos 3 grosores diferentes
	se copia el link dentro de la etiqueta head los link de cada fuente copiada (300,500,700
	y a parte google nos provee otro codigo para el css el cual lo dejamos dentro de una 
	etiqueta body
	
	PARA TENER EN CUENTA EN EL PROYECTO:
	https://polaris.shopify.com/design/design
	
	Se descargaron las imagenes de uso en el pryecto.
	
#### CLASE 5 CREAR UNA CONTRASE√ëA: HTML
	Clase donde se crea la estructura del html para crear la pantalla de login de nuestro
	desarrollo, alli tenemos titutlo, subtitulo, pass y confirmas pass. 
	Le damos el siguiente condigo html dentro del body
	
	<body>
    <div class = "login">
        <div class = "form-container">
            <img src = "" alt = "logo"
            class = "logo">

            <h1 class = "title">Create a new password</h1>
            <p class = "subtitle">Enter a new password for your account</p>

            <form action="/" class = "form">
                <label for="password" class = "label">Password</label>
                <input type="password" id ="password" placeholder="********" class="input input-password">

                <label for="new-password" class = "label">Password</label>
                <input type="password" id ="new-password" placeholder="********" class="input input-password">

                <input type="submit" value="confirm" class = "primary-button login-button">
            </form>
        </div>
    </div>
</body>
 
 ### CLASE 6 CREAR NUEVA CONTRASE√ëA EN CSS
 
 Vamos a estilizar lo anteiormente establecido en el html de la creacion de la contrase√±a
 de acuerdo a los requerimentos de dise√±o. 
 
 codigo agregado al repo
 
 ### CLASE 7 ELABORACION DE PANTALLA DE EMAIL ENVIADO
 Se elaboro la pantalla de email enviado con su respectivo responsive, 
 tener en cuenta que todas las eqtiqeutes y cierres est√©n bien ubicadas
 debido a que en el momento de dar estilo nos puede representar un problema mayor
 queda en el archivo 2_emailEnviado.html
 
 
 ### CLASE 8 LOGIN CREACION
 ### CLASE 9 CREAR Y EDITAR MI CUENTA
 ### CLASE 10 EDITAR MI CUENTA}
 ### CLASE 11 PAGINA DE INICIO HTML
	Primeor vamos a escrbir el hrml para las card que estan en el inicio. estructurando el html
	y despues ordenar. tener en cuenta la cantidad de columnas.
	
	Entonces para nuestra grid principal quedo estructurado lo principal en html y ahora se estilizar√°
	
 ### CLASE 12 PAGINA DE INCIIO CSS
	Se hace la maquitacion completa en complementadno con CSS,
	usamdo GRID para el formato general de celdas y Flexbox paradetalles entre los mismos.
	Recordemos mantener el responsive.
	
 ### CLASE 13 CREACION DEL MEN√ö DESKTOP
	SE CREA EN UN ARCHIVO APARTE UNICAMENTE EL MENU DE DESKTOP
	
 ### CLASE 14 CREACION DEL MENU MOBILE
 ### CLASE 15 creacion de my order en HTML
 ### CLASE 16 Estilizar el html de my order CSS
 ### CLASE 17 mis ordenes
 ### CLASE 18 NAVBAR HTML
 ### CLASE 19 NAVBAR CSS
 ### CLASE 20 DETALLE DEL PRODUCTO HTML
 ### CLASE 21 DETALLE DEL PRODUCTO CSS
 
 
 
 
 
 
 
 
 